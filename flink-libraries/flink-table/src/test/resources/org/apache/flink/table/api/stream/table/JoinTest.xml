<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testLeftOuterJoinEquiAndLocalPred">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[b, y])
+- StreamExecJoin(where=[AND(=(a, z), $f3)], join=[a, b, $f3, y, z], joinType=[LeftOuterJoin])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, b, <(b, 2) AS $f3])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[z]])
      +- StreamExecCalc(select=[y, z])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftOuterJoinEquiAndNonEquiPred">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[b, y])
+- StreamExecJoin(where=[AND(=(a, z), <(b, x))], join=[a, b, x, y, z], joinType=[LeftOuterJoin])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, b])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[z]])
      +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRowTimeInnerJoinWithTimeAccessed">
    <Resource name="plan">
      <![CDATA[
StreamExecWindowJoin(where=[AND(=(a, d), >=(lrtime, -(rrtime, 300000)), <(lrtime, rrtime), >(lrtime, f))], join=[a, b, c, lrtime, d, e, f, rrtime], joinType=[InnerJoin], windowBounds=[isRowTime=true, leftLowerBound=-300000, leftUpperBound=-1, leftTimeIndex=3, rightTimeIndex=3])
:- StreamExecExchange(distribution=[hash[a]])
:  +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
+- StreamExecExchange(distribution=[hash[d]])
   +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftOuterJoinEquiPred">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[b, y])
+- StreamExecJoin(where=[=(a, z)], join=[a, b, y, z], joinType=[LeftOuterJoin])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, b])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[z]])
      +- StreamExecCalc(select=[y, z])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testProcTimeWindowFullOuterJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, e, PROCTIME(lptime) AS lptime])
+- StreamExecWindowJoin(where=[AND(=(a, d), >=(lptime, -(rptime, 1000)), <(lptime, rptime))], join=[a, lptime, d, e, rptime], joinType=[FullOuterJoin], windowBounds=[isRowTime=false, leftLowerBound=-1000, leftUpperBound=-1, leftTimeIndex=1, rightTimeIndex=2])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, lptime])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[d]])
      +- StreamExecCalc(select=[d, e, rptime])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testProcTimeWindowInnerJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, e, PROCTIME(lptime) AS lptime])
+- StreamExecWindowJoin(where=[AND(=(a, d), >=(lptime, -(rptime, 1000)), <(lptime, rptime))], join=[a, lptime, d, e, rptime], joinType=[InnerJoin], windowBounds=[isRowTime=false, leftLowerBound=-1000, leftUpperBound=-1, leftTimeIndex=1, rightTimeIndex=2])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, lptime])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[d]])
      +- StreamExecCalc(select=[d, e, rptime])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testProcTimeWindowInnerJoinWithEquiTimeAttrs">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, e, PROCTIME(lptime) AS lptime])
+- StreamExecWindowJoin(where=[AND(=(a, d), =(lptime, rptime))], join=[a, lptime, d, e, rptime], joinType=[InnerJoin], windowBounds=[isRowTime=false, leftLowerBound=0, leftUpperBound=0, leftTimeIndex=1, rightTimeIndex=2])
   :- StreamExecExchange(distribution=[hash[a, lptime]])
   :  +- StreamExecCalc(select=[a, lptime])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[d, rptime]])
      +- StreamExecCalc(select=[d, e, rptime])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testProcTimeWindowLeftOuterJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, e, PROCTIME(lptime) AS lptime])
+- StreamExecWindowJoin(where=[AND(=(a, d), >=(lptime, -(rptime, 1000)), <(lptime, rptime))], join=[a, lptime, d, e, rptime], joinType=[LeftOuterJoin], windowBounds=[isRowTime=false, leftLowerBound=-1000, leftUpperBound=-1, leftTimeIndex=1, rightTimeIndex=2])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, lptime])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[d]])
      +- StreamExecCalc(select=[d, e, rptime])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testProcTimeWindowRightOuterJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, e, PROCTIME(lptime) AS lptime])
+- StreamExecWindowJoin(where=[AND(=(a, d), >=(lptime, -(rptime, 1000)), <(lptime, rptime))], join=[a, lptime, d, e, rptime], joinType=[RightOuterJoin], windowBounds=[isRowTime=false, leftLowerBound=-1000, leftUpperBound=-1, leftTimeIndex=1, rightTimeIndex=2])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, lptime])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[d]])
      +- StreamExecCalc(select=[d, e, rptime])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightOuterJoinEquiAndLocalPred">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[b, x])
+- StreamExecJoin(where=[AND(=(a, z), $f3)], join=[a, b, x, z, $f3], joinType=[RightOuterJoin])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, b])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[z]])
      +- StreamExecCalc(select=[x, z, <(x, 2) AS $f3])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightOuterJoinEquiAndNonEquiPred">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[b, y])
+- StreamExecJoin(where=[AND(=(a, z), <(b, x))], join=[a, b, x, y, z], joinType=[RightOuterJoin])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, b])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[z]])
      +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRowTimeWindowInnerJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, e, lrtime])
+- StreamExecWindowJoin(where=[AND(=(a, d), >=(lrtime, -(rrtime, 300000)), <(lrtime, +(rrtime, 3000)))], join=[a, lrtime, d, e, rrtime], joinType=[InnerJoin], windowBounds=[isRowTime=true, leftLowerBound=-300000, leftUpperBound=2999, leftTimeIndex=1, rightTimeIndex=2])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, lrtime])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[d]])
      +- StreamExecCalc(select=[d, e, rrtime])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightOuterJoinEquiPred">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[b, y])
+- StreamExecJoin(where=[=(a, z)], join=[a, b, y, z], joinType=[RightOuterJoin])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, b])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[z]])
      +- StreamExecCalc(select=[y, z])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRowTimeWindowFullOuterJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, e, lrtime])
+- StreamExecWindowJoin(where=[AND(=(a, d), >=(lrtime, -(rrtime, 300000)), <(lrtime, +(rrtime, 3000)))], join=[a, lrtime, d, e, rrtime], joinType=[FullOuterJoin], windowBounds=[isRowTime=true, leftLowerBound=-300000, leftUpperBound=2999, leftTimeIndex=1, rightTimeIndex=2])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, lrtime])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[d]])
      +- StreamExecCalc(select=[d, e, rrtime])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRowTimeWindowLeftOuterJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, e, lrtime])
+- StreamExecWindowJoin(where=[AND(=(a, d), >=(lrtime, -(rrtime, 300000)), <(lrtime, +(rrtime, 3000)))], join=[a, lrtime, d, e, rrtime], joinType=[LeftOuterJoin], windowBounds=[isRowTime=true, leftLowerBound=-300000, leftUpperBound=2999, leftTimeIndex=1, rightTimeIndex=2])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, lrtime])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[d]])
      +- StreamExecCalc(select=[d, e, rrtime])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRowTimeWindowOuterJoinOpt">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, e, lrtime])
+- StreamExecWindowJoin(where=[AND(=(a, d), >=(lrtime, -(rrtime, 300000)), <(lrtime, +(rrtime, 3000)))], join=[a, lrtime, d, e, rrtime], joinType=[InnerJoin], windowBounds=[isRowTime=true, leftLowerBound=-300000, leftUpperBound=2999, leftTimeIndex=1, rightTimeIndex=2])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, lrtime])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[d]])
      +- StreamExecCalc(select=[d, e, rrtime])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRowTimeWindowRightOuterJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, e, lrtime])
+- StreamExecWindowJoin(where=[AND(=(a, d), >=(lrtime, -(rrtime, 300000)), <(lrtime, +(rrtime, 3000)))], join=[a, lrtime, d, e, rrtime], joinType=[RightOuterJoin], windowBounds=[isRowTime=true, leftLowerBound=-300000, leftUpperBound=2999, leftTimeIndex=1, rightTimeIndex=2])
   :- StreamExecExchange(distribution=[hash[a]])
   :  +- StreamExecCalc(select=[a, lrtime])
   :     +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]])
   +- StreamExecExchange(distribution=[hash[d]])
      +- StreamExecCalc(select=[d, e, rrtime])
         +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]])
]]>
    </Resource>
  </TestCase>
</Root>
