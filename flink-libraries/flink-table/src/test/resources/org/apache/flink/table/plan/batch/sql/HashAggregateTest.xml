<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testAggNotSupportMerge[aggStrategy=NONE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT b, var_sum(a) from MyTable group by b]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0}], EXPR$1=[var_sum($1)])
+- LogicalProject(b=[$1], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[false], groupBy=[b], select=[b, var_sum(a) AS EXPR$1])
+- Exchange(distribution=[hash[b]])
   +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[b, a]]]], fields=[b, a])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggNotSupportMerge[aggStrategy=NONE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT b, var_sum(a) from MyTable group by b]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0}], EXPR$1=[var_sum($1)])
+- LogicalProject(b=[$1], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[false], groupBy=[b], select=[b, var_sum(a) AS EXPR$1])
+- Exchange(distribution=[hash[b]])
   +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[b, a]]]], fields=[b, a])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggNotSupportMerge[aggStrategy=ONE_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT b, var_sum(a) from MyTable group by b]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0}], EXPR$1=[var_sum($1)])
+- LogicalProject(b=[$1], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[false], groupBy=[b], select=[b, var_sum(a) AS EXPR$1])
+- Exchange(distribution=[hash[b]])
   +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[b, a]]]], fields=[b, a])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggNotSupportMerge[aggStrategy=ONE_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT b, var_sum(a) from MyTable group by b]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0}], EXPR$1=[var_sum($1)])
+- LogicalProject(b=[$1], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[false], groupBy=[b], select=[b, var_sum(a) AS EXPR$1])
+- Exchange(distribution=[hash[b]])
   +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[b, a]]]], fields=[b, a])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggNotSupportMerge[aggStrategy=TWO_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT b, var_sum(a) from MyTable group by b]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0}], EXPR$1=[var_sum($1)])
+- LogicalProject(b=[$1], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[false], groupBy=[b], select=[b, var_sum(a) AS EXPR$1])
+- Exchange(distribution=[hash[b]])
   +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[b, a]]]], fields=[b, a])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggNotSupportMerge[aggStrategy=TWO_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT b, var_sum(a) from MyTable group by b]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0}], EXPR$1=[var_sum($1)])
+- LogicalProject(b=[$1], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[false], groupBy=[b], select=[b, var_sum(a) AS EXPR$1])
+- Exchange(distribution=[hash[b]])
   +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[b, a]]]], fields=[b, a])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregate[aggStrategy=NONE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
+- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
+- Exchange(distribution=[single])
   +- LocalHashAggregate(select=[Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
      +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregate[aggStrategy=NONE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
+- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
+- Exchange(distribution=[single])
   +- LocalHashAggregate(select=[Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
      +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregate[aggStrategy=ONE_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
+- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[false], select=[AVG(a) AS EXPR$0, SUM(b) AS EXPR$1, COUNT(c) AS EXPR$2])
+- Exchange(distribution=[single])
   +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregate[aggStrategy=ONE_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
+- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[false], select=[AVG(a) AS EXPR$0, SUM(b) AS EXPR$1, COUNT(c) AS EXPR$2])
+- Exchange(distribution=[single])
   +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregate[aggStrategy=TWO_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
+- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
+- Exchange(distribution=[single])
   +- LocalHashAggregate(select=[Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
      +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregate[aggStrategy=TWO_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
+- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
+- Exchange(distribution=[single])
   +- LocalHashAggregate(select=[Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
      +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregateWithFilter[aggStrategy=NONE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable WHERE a = 1]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
+- LogicalFilter(condition=[=($0, 1)])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
+- Exchange(distribution=[single])
   +- LocalHashAggregate(select=[Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
      +- Calc(select=[a, b, c], where=[=(a, 1)])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregateWithFilter[aggStrategy=NONE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable WHERE a = 1]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
+- LogicalFilter(condition=[=($0, 1)])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
+- Exchange(distribution=[single])
   +- LocalHashAggregate(select=[Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
      +- Calc(select=[a, b, c], where=[=(a, 1)])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregateWithFilter[aggStrategy=ONE_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable WHERE a = 1]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
+- LogicalFilter(condition=[=($0, 1)])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[false], select=[AVG(a) AS EXPR$0, SUM(b) AS EXPR$1, COUNT(c) AS EXPR$2])
+- Exchange(distribution=[single])
   +- Calc(select=[a, b, c], where=[=(a, 1)])
      +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregateWithFilter[aggStrategy=ONE_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable WHERE a = 1]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
+- LogicalFilter(condition=[=($0, 1)])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[false], select=[AVG(a) AS EXPR$0, SUM(b) AS EXPR$1, COUNT(c) AS EXPR$2])
+- Exchange(distribution=[single])
   +- Calc(select=[a, b, c], where=[=(a, 1)])
      +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregateWithFilter[aggStrategy=TWO_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable WHERE a = 1]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
+- LogicalFilter(condition=[=($0, 1)])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
+- Exchange(distribution=[single])
   +- LocalHashAggregate(select=[Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
      +- Calc(select=[a, b, c], where=[=(a, 1)])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregateWithFilter[aggStrategy=TWO_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable WHERE a = 1]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
+- LogicalFilter(condition=[=($0, 1)])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
+- Exchange(distribution=[single])
   +- LocalHashAggregate(select=[Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
      +- Calc(select=[a, b, c], where=[=(a, 1)])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregateWithFilterOnNestedFields[aggStrategy=NONE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c), sum(c._1) FROM MyTable1 WHERE a = 1]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)], EXPR$3=[SUM($3)])
+- LogicalProject(a=[$0], b=[$1], c=[$2], $f3=[$2._1])
   +- LogicalFilter(condition=[=($0, 1)])
      +- LogicalTableScan(table=[[builtin, default, MyTable1]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2, Final_SUM(sum$4) AS EXPR$3])
+- Exchange(distribution=[single])
   +- LocalHashAggregate(select=[Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3, Partial_SUM($f3) AS sum$4])
      +- Calc(select=[CAST(1) AS a, b, c, c._1 AS $f3], where=[=(a, 1)])
         +- BoundedStreamScan(table=[[builtin, default, _DataStreamTable_0]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupAggregate[aggStrategy=NONE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable GROUP BY a]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3])
+- LogicalAggregate(group=[{0}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2])
+- HashAggregate(isMerge=[false], groupBy=[a], select=[a, AVG(a) AS EXPR$0, SUM(b) AS EXPR$1, COUNT(c) AS EXPR$2])
   +- Exchange(distribution=[hash[a]])
      +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregateWithFilterOnNestedFields[aggStrategy=NONE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c), sum(c._1) FROM MyTable1 WHERE a = 1]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)], EXPR$3=[SUM($3)])
+- LogicalProject(a=[$0], b=[$1], c=[$2], $f3=[$2._1])
   +- LogicalFilter(condition=[=($0, 1)])
      +- LogicalTableScan(table=[[builtin, default, MyTable1]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2, Final_SUM(sum$4) AS EXPR$3])
+- Exchange(distribution=[single])
   +- LocalHashAggregate(select=[Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3, Partial_SUM($f3) AS sum$4])
      +- Calc(select=[CAST(1) AS a, b, c, c._1 AS $f3], where=[=(a, 1)])
         +- BoundedStreamScan(table=[[builtin, default, _DataStreamTable_0]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregateWithFilterOnNestedFields[aggStrategy=ONE_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c), sum(c._1) FROM MyTable1 WHERE a = 1]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)], EXPR$3=[SUM($3)])
+- LogicalProject(a=[$0], b=[$1], c=[$2], $f3=[$2._1])
   +- LogicalFilter(condition=[=($0, 1)])
      +- LogicalTableScan(table=[[builtin, default, MyTable1]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[false], select=[AVG(a) AS EXPR$0, SUM(b) AS EXPR$1, COUNT(c) AS EXPR$2, SUM($f3) AS EXPR$3])
+- Exchange(distribution=[single])
   +- Calc(select=[CAST(1) AS a, b, c, c._1 AS $f3], where=[=(a, 1)])
      +- BoundedStreamScan(table=[[builtin, default, _DataStreamTable_0]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregateWithFilterOnNestedFields[aggStrategy=ONE_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c), sum(c._1) FROM MyTable1 WHERE a = 1]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)], EXPR$3=[SUM($3)])
+- LogicalProject(a=[$0], b=[$1], c=[$2], $f3=[$2._1])
   +- LogicalFilter(condition=[=($0, 1)])
      +- LogicalTableScan(table=[[builtin, default, MyTable1]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[false], select=[AVG(a) AS EXPR$0, SUM(b) AS EXPR$1, COUNT(c) AS EXPR$2, SUM($f3) AS EXPR$3])
+- Exchange(distribution=[single])
   +- Calc(select=[CAST(1) AS a, b, c, c._1 AS $f3], where=[=(a, 1)])
      +- BoundedStreamScan(table=[[builtin, default, _DataStreamTable_0]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregateWithFilterOnNestedFields[aggStrategy=TWO_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c), sum(c._1) FROM MyTable1 WHERE a = 1]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)], EXPR$3=[SUM($3)])
+- LogicalProject(a=[$0], b=[$1], c=[$2], $f3=[$2._1])
   +- LogicalFilter(condition=[=($0, 1)])
      +- LogicalTableScan(table=[[builtin, default, MyTable1]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2, Final_SUM(sum$4) AS EXPR$3])
+- Exchange(distribution=[single])
   +- LocalHashAggregate(select=[Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3, Partial_SUM($f3) AS sum$4])
      +- Calc(select=[CAST(1) AS a, b, c, c._1 AS $f3], where=[=(a, 1)])
         +- BoundedStreamScan(table=[[builtin, default, _DataStreamTable_0]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggregateWithFilterOnNestedFields[aggStrategy=TWO_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c), sum(c._1) FROM MyTable1 WHERE a = 1]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)], EXPR$3=[SUM($3)])
+- LogicalProject(a=[$0], b=[$1], c=[$2], $f3=[$2._1])
   +- LogicalFilter(condition=[=($0, 1)])
      +- LogicalTableScan(table=[[builtin, default, MyTable1]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2, Final_SUM(sum$4) AS EXPR$3])
+- Exchange(distribution=[single])
   +- LocalHashAggregate(select=[Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3, Partial_SUM($f3) AS sum$4])
      +- Calc(select=[CAST(1) AS a, b, c, c._1 AS $f3], where=[=(a, 1)])
         +- BoundedStreamScan(table=[[builtin, default, _DataStreamTable_0]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCube[aggStrategy=NONE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g, GROUPING(b) as gb, GROUPING(c) as gc, GROUPING_ID(b) as gib, GROUPING_ID(c) as gic, GROUPING_ID(b, c) as gid FROM MyTable GROUP BY CUBE (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {1}, {}]], a=[AVG($2)], g=[GROUP_ID()], gb=[GROUPING($0)], gc=[GROUPING($1)], gib=[GROUPING_ID($0)], gic=[GROUPING_ID($1)], gid=[GROUPING_ID($0, $1)])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g, CASE(=($e, 0), 0, =($e, 1), 0, =($e, 2), 1, 1) AS gb, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 0, 1) AS gc, CASE(=($e, 0), 0, =($e, 1), 0, =($e, 2), 1, 1) AS gib, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 0, 1) AS gic, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 2, 3) AS gid])
+- HashAggregate(isMerge=[true], groupBy=[b, c, $e], select=[b, c, $e, Final_AVG(sum$0, count$1) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- LocalHashAggregate(groupBy=[b, c, $e], select=[b, c, $e, Partial_AVG(a) AS (sum$0, count$1)])
         +- Expand(projects=[{a, b, c, 0 AS $e}, {a, b, null AS c, 1 AS $e}, {a, null AS b, c, 2 AS $e}, {a, null AS b, null AS c, 3 AS $e}])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCube[aggStrategy=NONE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g, GROUPING(b) as gb, GROUPING(c) as gc, GROUPING_ID(b) as gib, GROUPING_ID(c) as gic, GROUPING_ID(b, c) as gid FROM MyTable GROUP BY CUBE (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {1}, {}]], a=[AVG($2)], g=[GROUP_ID()], gb=[GROUPING($0)], gc=[GROUPING($1)], gib=[GROUPING_ID($0)], gic=[GROUPING_ID($1)], gid=[GROUPING_ID($0, $1)])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g, CASE(=($e, 0), 0, =($e, 1), 0, =($e, 2), 1, 1) AS gb, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 0, 1) AS gc, CASE(=($e, 0), 0, =($e, 1), 0, =($e, 2), 1, 1) AS gib, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 0, 1) AS gic, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 2, 3) AS gid])
+- HashAggregate(isMerge=[true], groupBy=[b, c, $e], select=[b, c, $e, Final_AVG(sum$0, count$1) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- LocalHashAggregate(groupBy=[b, c, $e], select=[b, c, $e, Partial_AVG(a) AS (sum$0, count$1)])
         +- Expand(projects=[{a, b, c, 0 AS $e}, {a, b, null AS c, 1 AS $e}, {a, null AS b, c, 2 AS $e}, {a, null AS b, null AS c, 3 AS $e}])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCube[aggStrategy=ONE_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g, GROUPING(b) as gb, GROUPING(c) as gc, GROUPING_ID(b) as gib, GROUPING_ID(c) as gic, GROUPING_ID(b, c) as gid FROM MyTable GROUP BY CUBE (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {1}, {}]], a=[AVG($2)], g=[GROUP_ID()], gb=[GROUPING($0)], gc=[GROUPING($1)], gib=[GROUPING_ID($0)], gic=[GROUPING_ID($1)], gid=[GROUPING_ID($0, $1)])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g, CASE(=($e, 0), 0, =($e, 1), 0, =($e, 2), 1, 1) AS gb, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 0, 1) AS gc, CASE(=($e, 0), 0, =($e, 1), 0, =($e, 2), 1, 1) AS gib, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 0, 1) AS gic, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 2, 3) AS gid])
+- HashAggregate(isMerge=[false], groupBy=[b, c, $e], select=[b, c, $e, AVG(a) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- Expand(projects=[{a, b, c, 0 AS $e}, {a, b, null AS c, 1 AS $e}, {a, null AS b, c, 2 AS $e}, {a, null AS b, null AS c, 3 AS $e}])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCube[aggStrategy=ONE_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g, GROUPING(b) as gb, GROUPING(c) as gc, GROUPING_ID(b) as gib, GROUPING_ID(c) as gic, GROUPING_ID(b, c) as gid FROM MyTable GROUP BY CUBE (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {1}, {}]], a=[AVG($2)], g=[GROUP_ID()], gb=[GROUPING($0)], gc=[GROUPING($1)], gib=[GROUPING_ID($0)], gic=[GROUPING_ID($1)], gid=[GROUPING_ID($0, $1)])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g, CASE(=($e, 0), 0, =($e, 1), 0, =($e, 2), 1, 1) AS gb, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 0, 1) AS gc, CASE(=($e, 0), 0, =($e, 1), 0, =($e, 2), 1, 1) AS gib, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 0, 1) AS gic, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 2, 3) AS gid])
+- HashAggregate(isMerge=[false], groupBy=[b, c, $e], select=[b, c, $e, AVG(a) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- Expand(projects=[{a, b, c, 0 AS $e}, {a, b, null AS c, 1 AS $e}, {a, null AS b, c, 2 AS $e}, {a, null AS b, null AS c, 3 AS $e}])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCube[aggStrategy=TWO_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g, GROUPING(b) as gb, GROUPING(c) as gc, GROUPING_ID(b) as gib, GROUPING_ID(c) as gic, GROUPING_ID(b, c) as gid FROM MyTable GROUP BY CUBE (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {1}, {}]], a=[AVG($2)], g=[GROUP_ID()], gb=[GROUPING($0)], gc=[GROUPING($1)], gib=[GROUPING_ID($0)], gic=[GROUPING_ID($1)], gid=[GROUPING_ID($0, $1)])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g, CASE(=($e, 0), 0, =($e, 1), 0, =($e, 2), 1, 1) AS gb, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 0, 1) AS gc, CASE(=($e, 0), 0, =($e, 1), 0, =($e, 2), 1, 1) AS gib, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 0, 1) AS gic, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 2, 3) AS gid])
+- HashAggregate(isMerge=[true], groupBy=[b, c, $e], select=[b, c, $e, Final_AVG(sum$0, count$1) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- LocalHashAggregate(groupBy=[b, c, $e], select=[b, c, $e, Partial_AVG(a) AS (sum$0, count$1)])
         +- Expand(projects=[{a, b, c, 0 AS $e}, {a, b, null AS c, 1 AS $e}, {a, null AS b, c, 2 AS $e}, {a, null AS b, null AS c, 3 AS $e}])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCube[aggStrategy=TWO_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g, GROUPING(b) as gb, GROUPING(c) as gc, GROUPING_ID(b) as gib, GROUPING_ID(c) as gic, GROUPING_ID(b, c) as gid FROM MyTable GROUP BY CUBE (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {1}, {}]], a=[AVG($2)], g=[GROUP_ID()], gb=[GROUPING($0)], gc=[GROUPING($1)], gib=[GROUPING_ID($0)], gic=[GROUPING_ID($1)], gid=[GROUPING_ID($0, $1)])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g, CASE(=($e, 0), 0, =($e, 1), 0, =($e, 2), 1, 1) AS gb, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 0, 1) AS gc, CASE(=($e, 0), 0, =($e, 1), 0, =($e, 2), 1, 1) AS gib, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 0, 1) AS gic, CASE(=($e, 0), 0, =($e, 1), 1, =($e, 2), 2, 3) AS gid])
+- HashAggregate(isMerge=[true], groupBy=[b, c, $e], select=[b, c, $e, Final_AVG(sum$0, count$1) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- LocalHashAggregate(groupBy=[b, c, $e], select=[b, c, $e, Partial_AVG(a) AS (sum$0, count$1)])
         +- Expand(projects=[{a, b, c, 0 AS $e}, {a, b, null AS c, 1 AS $e}, {a, null AS b, c, 2 AS $e}, {a, null AS b, null AS c, 3 AS $e}])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupAggregate[aggStrategy=NONE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable GROUP BY a]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3])
+- LogicalAggregate(group=[{0}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2])
+- HashAggregate(isMerge=[true], groupBy=[a], select=[a, Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
   +- Exchange(distribution=[hash[a]])
      +- LocalHashAggregate(groupBy=[a], select=[a, Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupAggregate[aggStrategy=ONE_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable GROUP BY a]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3])
+- LogicalAggregate(group=[{0}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2])
+- HashAggregate(isMerge=[false], groupBy=[a], select=[a, AVG(a) AS EXPR$0, SUM(b) AS EXPR$1, COUNT(c) AS EXPR$2])
   +- Exchange(distribution=[hash[a]])
      +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupAggregate[aggStrategy=ONE_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable GROUP BY a]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3])
+- LogicalAggregate(group=[{0}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2])
+- HashAggregate(isMerge=[false], groupBy=[a], select=[a, AVG(a) AS EXPR$0, SUM(b) AS EXPR$1, COUNT(c) AS EXPR$2])
   +- Exchange(distribution=[hash[a]])
      +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupAggregate[aggStrategy=TWO_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable GROUP BY a]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3])
+- LogicalAggregate(group=[{0}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2])
+- HashAggregate(isMerge=[true], groupBy=[a], select=[a, Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
   +- Exchange(distribution=[hash[a]])
      +- LocalHashAggregate(groupBy=[a], select=[a, Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupAggregate[aggStrategy=TWO_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable GROUP BY a]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3])
+- LogicalAggregate(group=[{0}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2])
+- HashAggregate(isMerge=[true], groupBy=[a], select=[a, Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
   +- Exchange(distribution=[hash[a]])
      +- LocalHashAggregate(groupBy=[a], select=[a, Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupAggregateWithFilter[aggStrategy=NONE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable WHERE a = 1 GROUP BY a]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3])
+- LogicalAggregate(group=[{0}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
   +- LogicalFilter(condition=[=($0, 1)])
      +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2])
+- HashAggregate(isMerge=[true], groupBy=[a], select=[a, Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
   +- Exchange(distribution=[hash[a]])
      +- LocalHashAggregate(groupBy=[a], select=[a, Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
         +- Calc(select=[a, b, c], where=[=(a, 1)])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupAggregateWithFilter[aggStrategy=NONE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable WHERE a = 1 GROUP BY a]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3])
+- LogicalAggregate(group=[{0}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
   +- LogicalFilter(condition=[=($0, 1)])
      +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2])
+- HashAggregate(isMerge=[false], groupBy=[a], select=[a, AVG(a) AS EXPR$0, SUM(b) AS EXPR$1, COUNT(c) AS EXPR$2])
   +- Exchange(distribution=[hash[a]])
      +- Calc(select=[a, b, c], where=[=(a, 1)])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupAggregateWithFilter[aggStrategy=ONE_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable WHERE a = 1 GROUP BY a]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3])
+- LogicalAggregate(group=[{0}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
   +- LogicalFilter(condition=[=($0, 1)])
      +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2])
+- HashAggregate(isMerge=[false], groupBy=[a], select=[a, AVG(a) AS EXPR$0, SUM(b) AS EXPR$1, COUNT(c) AS EXPR$2])
   +- Exchange(distribution=[hash[a]])
      +- Calc(select=[a, b, c], where=[=(a, 1)])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupAggregateWithFilter[aggStrategy=ONE_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable WHERE a = 1 GROUP BY a]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3])
+- LogicalAggregate(group=[{0}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
   +- LogicalFilter(condition=[=($0, 1)])
      +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2])
+- HashAggregate(isMerge=[false], groupBy=[a], select=[a, AVG(a) AS EXPR$0, SUM(b) AS EXPR$1, COUNT(c) AS EXPR$2])
   +- Exchange(distribution=[hash[a]])
      +- Calc(select=[a, b, c], where=[=(a, 1)])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupAggregateWithFilter[aggStrategy=TWO_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable WHERE a = 1 GROUP BY a]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3])
+- LogicalAggregate(group=[{0}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
   +- LogicalFilter(condition=[=($0, 1)])
      +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2])
+- HashAggregate(isMerge=[true], groupBy=[a], select=[a, Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
   +- Exchange(distribution=[hash[a]])
      +- LocalHashAggregate(groupBy=[a], select=[a, Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
         +- Calc(select=[a, b, c], where=[=(a, 1)])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupAggregateWithFilter[aggStrategy=TWO_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT avg(a), sum(b), count(c) FROM MyTable WHERE a = 1 GROUP BY a]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3])
+- LogicalAggregate(group=[{0}], EXPR$0=[AVG($0)], EXPR$1=[SUM($1)], EXPR$2=[COUNT($2)])
   +- LogicalFilter(condition=[=($0, 1)])
      +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2])
+- HashAggregate(isMerge=[true], groupBy=[a], select=[a, Final_AVG(sum$0, count$1) AS EXPR$0, Final_SUM(sum$2) AS EXPR$1, Final_COUNT(count$3) AS EXPR$2])
   +- Exchange(distribution=[hash[a]])
      +- LocalHashAggregate(groupBy=[a], select=[a, Partial_AVG(a) AS (sum$0, count$1), Partial_SUM(b) AS sum$2, Partial_COUNT(c) AS count$3])
         +- Calc(select=[a, b, c], where=[=(a, 1)])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupingSets[aggStrategy=NONE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g FROM MyTable GROUP BY GROUPING SETS (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0}, {1}]], a=[AVG($2)], g=[GROUP_ID()])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g])
+- HashAggregate(isMerge=[true], groupBy=[b, c, $e], select=[b, c, $e, Final_AVG(sum$0, count$1) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- LocalHashAggregate(groupBy=[b, c, $e], select=[b, c, $e, Partial_AVG(a) AS (sum$0, count$1)])
         +- Expand(projects=[{a, b, null AS c, 1 AS $e}, {a, null AS b, c, 2 AS $e}])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupingSets[aggStrategy=NONE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g FROM MyTable GROUP BY GROUPING SETS (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0}, {1}]], a=[AVG($2)], g=[GROUP_ID()])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g])
+- HashAggregate(isMerge=[true], groupBy=[b, c, $e], select=[b, c, $e, Final_AVG(sum$0, count$1) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- LocalHashAggregate(groupBy=[b, c, $e], select=[b, c, $e, Partial_AVG(a) AS (sum$0, count$1)])
         +- Expand(projects=[{a, b, null AS c, 1 AS $e}, {a, null AS b, c, 2 AS $e}])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupingSets[aggStrategy=ONE_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g FROM MyTable GROUP BY GROUPING SETS (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0}, {1}]], a=[AVG($2)], g=[GROUP_ID()])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g])
+- HashAggregate(isMerge=[false], groupBy=[b, c, $e], select=[b, c, $e, AVG(a) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- Expand(projects=[{a, b, null AS c, 1 AS $e}, {a, null AS b, c, 2 AS $e}])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupingSets[aggStrategy=ONE_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g FROM MyTable GROUP BY GROUPING SETS (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0}, {1}]], a=[AVG($2)], g=[GROUP_ID()])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g])
+- HashAggregate(isMerge=[false], groupBy=[b, c, $e], select=[b, c, $e, AVG(a) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- Expand(projects=[{a, b, null AS c, 1 AS $e}, {a, null AS b, c, 2 AS $e}])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupingSets[aggStrategy=TWO_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g FROM MyTable GROUP BY GROUPING SETS (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0}, {1}]], a=[AVG($2)], g=[GROUP_ID()])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g])
+- HashAggregate(isMerge=[true], groupBy=[b, c, $e], select=[b, c, $e, Final_AVG(sum$0, count$1) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- LocalHashAggregate(groupBy=[b, c, $e], select=[b, c, $e, Partial_AVG(a) AS (sum$0, count$1)])
         +- Expand(projects=[{a, b, null AS c, 1 AS $e}, {a, null AS b, c, 2 AS $e}])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupingSets[aggStrategy=TWO_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g FROM MyTable GROUP BY GROUPING SETS (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0}, {1}]], a=[AVG($2)], g=[GROUP_ID()])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g])
+- HashAggregate(isMerge=[true], groupBy=[b, c, $e], select=[b, c, $e, Final_AVG(sum$0, count$1) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- LocalHashAggregate(groupBy=[b, c, $e], select=[b, c, $e, Partial_AVG(a) AS (sum$0, count$1)])
         +- Expand(projects=[{a, b, null AS c, 1 AS $e}, {a, null AS b, c, 2 AS $e}])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRollup[aggStrategy=NONE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g, GROUPING(b) as gb, GROUPING(c) as gc, GROUPING_ID(b) as gib, GROUPING_ID(c) as gic, GROUPING_ID(b, c) as gid  FROM MyTable GROUP BY ROLLUP (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {}]], a=[AVG($2)], g=[GROUP_ID()], gb=[GROUPING($0)], gc=[GROUPING($1)], gib=[GROUPING_ID($0)], gic=[GROUPING_ID($1)], gid=[GROUPING_ID($0, $1)])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g, CASE(=($e, 0), 0, =($e, 1), 0, 1) AS gb, CASE(=($e, 0), 0, =($e, 1), 1, 1) AS gc, CASE(=($e, 0), 0, =($e, 1), 0, 1) AS gib, CASE(=($e, 0), 0, =($e, 1), 1, 1) AS gic, CASE(=($e, 0), 0, =($e, 1), 1, 3) AS gid])
+- HashAggregate(isMerge=[true], groupBy=[b, c, $e], select=[b, c, $e, Final_AVG(sum$0, count$1) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- LocalHashAggregate(groupBy=[b, c, $e], select=[b, c, $e, Partial_AVG(a) AS (sum$0, count$1)])
         +- Expand(projects=[{a, b, c, 0 AS $e}, {a, b, null AS c, 1 AS $e}, {a, null AS b, null AS c, 3 AS $e}])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRollup[aggStrategy=NONE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g, GROUPING(b) as gb, GROUPING(c) as gc, GROUPING_ID(b) as gib, GROUPING_ID(c) as gic, GROUPING_ID(b, c) as gid  FROM MyTable GROUP BY ROLLUP (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {}]], a=[AVG($2)], g=[GROUP_ID()], gb=[GROUPING($0)], gc=[GROUPING($1)], gib=[GROUPING_ID($0)], gic=[GROUPING_ID($1)], gid=[GROUPING_ID($0, $1)])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g, CASE(=($e, 0), 0, =($e, 1), 0, 1) AS gb, CASE(=($e, 0), 0, =($e, 1), 1, 1) AS gc, CASE(=($e, 0), 0, =($e, 1), 0, 1) AS gib, CASE(=($e, 0), 0, =($e, 1), 1, 1) AS gic, CASE(=($e, 0), 0, =($e, 1), 1, 3) AS gid])
+- HashAggregate(isMerge=[true], groupBy=[b, c, $e], select=[b, c, $e, Final_AVG(sum$0, count$1) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- LocalHashAggregate(groupBy=[b, c, $e], select=[b, c, $e, Partial_AVG(a) AS (sum$0, count$1)])
         +- Expand(projects=[{a, b, c, 0 AS $e}, {a, b, null AS c, 1 AS $e}, {a, null AS b, null AS c, 3 AS $e}])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRollup[aggStrategy=ONE_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g, GROUPING(b) as gb, GROUPING(c) as gc, GROUPING_ID(b) as gib, GROUPING_ID(c) as gic, GROUPING_ID(b, c) as gid  FROM MyTable GROUP BY ROLLUP (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {}]], a=[AVG($2)], g=[GROUP_ID()], gb=[GROUPING($0)], gc=[GROUPING($1)], gib=[GROUPING_ID($0)], gic=[GROUPING_ID($1)], gid=[GROUPING_ID($0, $1)])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g, CASE(=($e, 0), 0, =($e, 1), 0, 1) AS gb, CASE(=($e, 0), 0, =($e, 1), 1, 1) AS gc, CASE(=($e, 0), 0, =($e, 1), 0, 1) AS gib, CASE(=($e, 0), 0, =($e, 1), 1, 1) AS gic, CASE(=($e, 0), 0, =($e, 1), 1, 3) AS gid])
+- HashAggregate(isMerge=[false], groupBy=[b, c, $e], select=[b, c, $e, AVG(a) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- Expand(projects=[{a, b, c, 0 AS $e}, {a, b, null AS c, 1 AS $e}, {a, null AS b, null AS c, 3 AS $e}])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRollup[aggStrategy=ONE_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g, GROUPING(b) as gb, GROUPING(c) as gc, GROUPING_ID(b) as gib, GROUPING_ID(c) as gic, GROUPING_ID(b, c) as gid  FROM MyTable GROUP BY ROLLUP (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {}]], a=[AVG($2)], g=[GROUP_ID()], gb=[GROUPING($0)], gc=[GROUPING($1)], gib=[GROUPING_ID($0)], gic=[GROUPING_ID($1)], gid=[GROUPING_ID($0, $1)])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g, CASE(=($e, 0), 0, =($e, 1), 0, 1) AS gb, CASE(=($e, 0), 0, =($e, 1), 1, 1) AS gc, CASE(=($e, 0), 0, =($e, 1), 0, 1) AS gib, CASE(=($e, 0), 0, =($e, 1), 1, 1) AS gic, CASE(=($e, 0), 0, =($e, 1), 1, 3) AS gid])
+- HashAggregate(isMerge=[false], groupBy=[b, c, $e], select=[b, c, $e, AVG(a) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- Expand(projects=[{a, b, c, 0 AS $e}, {a, b, null AS c, 1 AS $e}, {a, null AS b, null AS c, 3 AS $e}])
         +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRollup[aggStrategy=TWO_PHASE, withNdv=true]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g, GROUPING(b) as gb, GROUPING(c) as gc, GROUPING_ID(b) as gib, GROUPING_ID(c) as gic, GROUPING_ID(b, c) as gid  FROM MyTable GROUP BY ROLLUP (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {}]], a=[AVG($2)], g=[GROUP_ID()], gb=[GROUPING($0)], gc=[GROUPING($1)], gib=[GROUPING_ID($0)], gic=[GROUPING_ID($1)], gid=[GROUPING_ID($0, $1)])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g, CASE(=($e, 0), 0, =($e, 1), 0, 1) AS gb, CASE(=($e, 0), 0, =($e, 1), 1, 1) AS gc, CASE(=($e, 0), 0, =($e, 1), 0, 1) AS gib, CASE(=($e, 0), 0, =($e, 1), 1, 1) AS gic, CASE(=($e, 0), 0, =($e, 1), 1, 3) AS gid])
+- HashAggregate(isMerge=[true], groupBy=[b, c, $e], select=[b, c, $e, Final_AVG(sum$0, count$1) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- LocalHashAggregate(groupBy=[b, c, $e], select=[b, c, $e, Partial_AVG(a) AS (sum$0, count$1)])
         +- Expand(projects=[{a, b, c, 0 AS $e}, {a, b, null AS c, 1 AS $e}, {a, null AS b, null AS c, 3 AS $e}])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRollup[aggStrategy=TWO_PHASE, withNdv=false]">
    <Resource name="sql">
      <![CDATA[SELECT b, c, avg(a) as a, GROUP_ID() as g, GROUPING(b) as gb, GROUPING(c) as gc, GROUPING_ID(b) as gib, GROUPING_ID(c) as gic, GROUPING_ID(b, c) as gid  FROM MyTable GROUP BY ROLLUP (b, c)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {}]], a=[AVG($2)], g=[GROUP_ID()], gb=[GROUPING($0)], gc=[GROUPING($1)], gib=[GROUPING_ID($0)], gic=[GROUPING_ID($1)], gid=[GROUPING_ID($0, $1)])
+- LogicalProject(b=[$1], c=[$2], a=[$0])
   +- LogicalTableScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[b, c, a, 0 AS g, CASE(=($e, 0), 0, =($e, 1), 0, 1) AS gb, CASE(=($e, 0), 0, =($e, 1), 1, 1) AS gc, CASE(=($e, 0), 0, =($e, 1), 0, 1) AS gib, CASE(=($e, 0), 0, =($e, 1), 1, 1) AS gic, CASE(=($e, 0), 0, =($e, 1), 1, 3) AS gid])
+- HashAggregate(isMerge=[true], groupBy=[b, c, $e], select=[b, c, $e, Final_AVG(sum$0, count$1) AS a])
   +- Exchange(distribution=[hash[b, c, $e]])
      +- LocalHashAggregate(groupBy=[b, c, $e], select=[b, c, $e, Partial_AVG(a) AS (sum$0, count$1)])
         +- Expand(projects=[{a, b, c, 0 AS $e}, {a, b, null AS c, 1 AS $e}, {a, null AS b, null AS c, 3 AS $e}])
            +- TableSourceScan(table=[[builtin, default, MyTable, source: [selectedFields=[a, b, c]]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
</Root>
